name: javaci
# continuous integration 

on:
 #push:
  #branches:
   #- main
 #workflow_call:
 workflow_dispatch: 
  #secrets:
   #   Workflow2_PAT_TOKEN_GITHUB:
    #    required: true

 
env:
  JAVA_VERSION: '17'                       

jobs:
  build_and_test:

    runs-on: ubuntu-latest
    #runs-on: self-hosted

    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v3
      
    - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
                

    - name: Build project with Maven
      run: mvn -B package --file pom.xml
           
    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
    #- name: SonarQube Scan
     # uses: kitabisa/sonarqube-action@v1.2.0
      #with:
       # host: ${{ secrets.SONARQUBE_HOST }}
        #login: ${{ secrets.SONARQUBE_TOKEN }}
        #projectKey: test-maven-project
        
    - name: Build and analyze
      env:
         GITHUB_TOKEN: ${{ secrets.Workflow2_PAT_TOKEN_GITHUB }}  # Needed to get PR information, if any
         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
         projectKey: test-maven-project
      #run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=java-sonar
    
    #- name: SonarQube Scan
     # run: |
      # export SONARQUBE_HOST=${{ secrets.SONARQUBE_HOST }}
       #export SONARQUBE_TOKEN=${{ secrets.SONARQUBE_TOKEN }}    
        #  mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=test-maven-project
          #mvn install sonar:sonar \
           # -Dsonar.projectKey=test-maven-project \
            #-Dsonar.organization=my_organization \
            #-Dsonar.host.url=$SONARQUBE_HOST \
            #-Dsonar.login=$SONARQUBE_TOKEN
       
